port mapping:

nginx: 80
wordpress: 80
httpd(apache): 80

jenkins: 8080
tomee: 8080
adminer: 8080

selenium/hub: 4444
selenium/node-chrome-debug: 5900
selenium/node-firefox-debug: 5900

mysql: 3306



no port mapping:

php


other things:

mysql - environment: MYSQL_ROOT_PASSWORD

2. POSTGRES:
	POSTGRES_PASSWORD: intelliqit
        POSTGRES_USER: myuser
        POSTGRES_DB: mydb


all:

ubuntu
centos
busybox


default process:

-----------------

remember:

1. mysql image - mysql -u root -p (to login into this database)

2. mysql:5 - we can download image with this version not with 'mysql'

3. ports, links, networks(top), volumes(top) in docker compose file are with '-'. 

4. 
networks:
 default:
  external: true
   name: intelliqit

	--  for creating customised networks in docker compose file. networks is alligned with version and services.


5.
deploy:
   //replicas: 2
   placement:
    constraints:
     - node.hostname == Manager


6.
deploy:
   //replicas: 2
   resources:
    limits:
     cpus: "0.1"
     memory: "300M"


7. (down)
secrets:
    pg_password:
     external: true
    pg_user:
     external: true
    pg_db:
     external: true



8. down networks, volumes and secrets are alligned with services.


9.

docker:
=======
version
services
volumes
networks
secrets


kubernates:
===========
apiVersion
kind
metadata	- data about data
spec 		- actual info is stored

 
=================================

main topics:

1. multicontainer architecture(--link, compose and network)

2. docker volumes(simple, sharable, docker volume containers) - general, dockerfile, docker-compose

3. creating docker images (commit and dockerfile)

4. pushing and pulling images from docker hub and local registry, ECR

5. docker swarm 4 features

6. overlay network(network load balancing, rolling network update)

7. docker stack, deciding where replicas should create, limits, docker secrets